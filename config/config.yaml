#config_version=6

#mpf launch commands
#mpf -a (lowercase) Forces reload the config from YAML not cache.
#mpf -A (uppercase) Do not cache the config files.
#mpf -b Disables BCP interface  - won't connect to a media controller like Godot
#mpf -c (lowercase) Specifies name of config file (or files) to load. 
#mpf -C (uppercase) Specify the name of the MPF default config file which is loaded before your machine config. (MPF includes a file mpfconfig.yaml which is inside the MPF package which sets up default things like which modules are loaded, paths used, etc. If for some reason you want to override this file, you can do so with the -C option.
#mpf -h Displays the command line help and exits. (Pretty much what's on this page.)
#mpf -f Forces MPF to load all assets at start (rather than the default behavior where some assets can be loaded only when modes start or based on other events). This is useful during development to ensure that all assets are valid and loadable.
#mpf -t Disable Text UI. This can be helpful while debugging and is also recommended when running the machine in production.
#mpf -l (lowercase "L") Specifies the name and path of the log file.
#mpf --syslog_address - Log to the specified syslog address. This can be a domain socket such as /dev/log on Linux or /var/run/syslog on Mac. Alternatively, you an specify host:port for remote logging over UDP.
#mpf -v (lowercase) Enables verbose logging to the log file. Warning: Your log files will be huge, perhaps 1MB per minute of game time. Definitely only use this when you're troubleshooting.
#mpf -V (uppercase) Enables verbose logging to the console output.
#mpf -x (lowercase) Ignores all platform: settings in your config files and forces MPF to run using the virtual platform interface. This is nice for testing when you don't have your physical hardware attached.
#mpf -X (uppercase) Like -x, except it forces the smart virtual platform.
#mpf --vpx Like -x, except it forces the Virtual Pinball (VPX) platform.

###########################################config section#################################
# imports various other config files
##########################################################################################

config:
  - config_ball_devices.yaml
  - config_coils.yaml
  - config_switches.yaml

modes:
  - attract
  - base
  
#displays:
#  window:
#    width: 800
#    height: 600

hardware:
#  platform: fast
#  driverboards: fast
  platform: smart_virtual
  
###########################################hardware section#################################
# hardware requirements
############################################################################################
#FAST code
fast:
  net:
    controller: neuron
    io_loop:
      3208:
        model: FP-I/O-3208
        order: 1
    port: auto
    baud: 921600
    debug: false
    watchdog: 1s
    default_quick_debounce_open: 2ms
    default_quick_debounce_close: 2ms
    default_normal_debounce_open: 4ms
    default_normal_debounce_close: 4ms
  
  exp:
    boards:
      neuron:
        model: FP-EXP-2000
        #breakouts:
          # - port: 1
          #  model: FP-PWR-0030
    port: auto
    baud: 921600
    debug: False
###########################################playfields section#################################
#playfields section for adding main playfield, upper playfield
##########################################################################################
    
playfields:
  playfield:
    default_source_device: bd_plunger #usually bd_trough # this is the default location ball device
    tags: default

###########################################Autofire Coils Section#################################
#section for adding autofire coils
################################################################################################
autofire_coils:
  ac_slingshot_left:
    coil: c_sling_left
    switch: s_sling_left
  ac_slingshot_right:
    coil: c_sling_right
    switch: s_sling_right

###########################################Flippers Section#####################################
#section for adding flippers
################################################################################################    
flippers:
  left_flipper:
    main_coil: c_flipper_left_main
    hold_coil: c_flipper_left_hold
    activation_switch: s_flipper_left
    enable_events: machine_reset_phase_3 #enable_events: machine_reset_phase_3 allows flipper coils to work during attract
    eos_switch: s_flipper_left_eos
    use_eos: true
    repulse_on_eos_open: true
    eos_active_ms_before_repulse: 500
  right_flipper:
    main_coil: c_flipper_right_main
    hold_coil: c_flipper_right_hold
    activation_switch: s_flipper_right
    enable_events: machine_reset_phase_3 #enable_events: machine_reset_phase_3 allows flipper coils to work during attract
    eos_switch: s_flipper_right_eos
    use_eos: true
    repulse_on_eos_open: true
    eos_active_ms_before_repulse: 500
    
